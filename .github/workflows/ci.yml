name: Enterprise CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  ECR_REGISTRY: <your-aws-account-id>.dkr.ecr.<region>.amazonaws.com
  ECR_REPOSITORY: enterprise-demo-app
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-test-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm test

    - name: Build Docker image
      run: |
        docker build \
          --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          --tag $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          .

    - name: Run security scan
      uses: anchore/scan-action@v3
      with:
        image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        fail-build: true
        severity-cutoff: 'critical'

    - name: Push to ECR
      run: |
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Upload SBOM
      uses: anchore/sbom-action@v1
      with:
        image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        format: 'spdx'

    - name: Store image metadata
      id: image-metadata
      run: |
        echo "IMAGE_FULL_NAME=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
        echo "IMAGE_SHA=$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Update deployment manifests
      run: |
        sed -i "s|image:.*|image: ${{ steps.image-metadata.outputs.IMAGE_FULL_NAME }}|g" k8s/**/deployment.yaml
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add k8s/
        git commit -m "CI: Update image to ${{ steps.image-metadata.outputs.IMAGE_SHA }}" || echo "No changes to commit"
        git push
